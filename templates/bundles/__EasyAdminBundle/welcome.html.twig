{# @var ea \EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext #}
{% extends '@EasyAdmin/page/content.html.twig' %}



{% block main %}
<style>
#chartdiv,#chartdiv2 {
  width: 100%;
  height: 400px;
}
</style>
			    
		<div class="row">
		   
       
       
       
        <div class="col-6 col-xs-6 col-sm-6 col-md-4 col-lg-2">
		        <div class="card   mb-3" >
                  <div class="card-header bg-primary text-white" >
                      <i class="fa fa-user"></i>
                      Chiffre d'affaire
                  </div>
                  <div class="card-body text-center">
                    <h1 class="card-title">106345,23 <small style="font-size:0.5rem;">MAD</small></h1>
                    
                  </div>
                </div>
		    </div>


         <div class="col-6 col-xs-6 col-sm-6 col-md-4 col-lg-2">
		        <div class="card   mb-3" >
                  <div class="card-header bg-orange  text-white" >
                      <i class="fa fa-user"></i>
                      Clients
                  </div>
                  <div class="card-body text-center">
                    <h1 class="card-title">367 <small style="font-size:0.5rem;">Cliens</small></h1>
                    
                  </div>
                </div>
		    </div>


 <div class="col-6 col-xs-6 col-sm-6 col-md-4 col-lg-2">
		        <div class="card   mb-3" >
                  <div class="card-header bg-pink text-white" >
                      <i class="fa fa-user"></i>
                      Facture payées
                  </div>
                  <div class="card-body text-center">
                    <h1 class="card-title">53 <small style="font-size:0.5rem;">Ce mois</small></h1>
                    
                  </div>
                </div>
		    </div>


 <div class="col-6 col-xs-6 col-sm-6 col-md-4 col-lg-2">
		        <div class="card   mb-3" >
                  <div class="card-header bg-purple text-white" >
                      <i class="fa fa-user"></i>
                      Nv. notifications
                  </div>
                  <div class="card-body text-center">
                    <h1 class="card-title">13 <small style="font-size:0.5rem;">Messages</small></h1>
                    
                  </div>
                </div>
		    </div>


 <div class="col-6 col-xs-6 col-sm-6 col-md-4 col-lg-2">
		        <div class="card   mb-3" >
                  <div class="card-header bg-blue text-white" >
                      <i class="fa fa-user"></i>
                      Devis á traités
                  </div>
                  <div class="card-body text-center">
                    <h1 class="card-title">107 <small style="font-size:0.5rem;">Devis</small></h1>
                    
                  </div>
                </div>
		    </div>


 <div class="col-6 col-xs-6 col-sm-6 col-md-4 col-lg-2">
		        <div class="card   mb-3" >
                  <div class="card-header bg-danger text-white" >
                      <i class="fa fa-user"></i>
                      Dépences ce mois
                  </div>
                  <div class="card-body text-center">
                    <h1 class="card-title">79 056 <small style="font-size:0.5rem;">MAD</small></h1>
                    
                  </div>
                </div>
		    </div>




		    
		</div>
				

    <div class="row">


     <div class="col-12 col-md-12 col-lg-6">
		        <div class="card   mb-3" >
                  <div class="card-header bg-primary text-white" >
                      <i class="fa fa-user"></i>
                      Header
                  </div>
                  <div class="card-body text-center">
                    <div id="chartdiv2" ></div>
                  </div>
                </div>
		    </div>

             <div class="col-12 col-md-12 col-lg-6">
		        <div class="card   mb-3" >
                  <div class="card-header bg-primary text-white" >
                      <i class="fa fa-user"></i>
                      Header
                  </div>
                  <div class="card-body text-center">
                    <div id="chartdiv" ></div>
                  </div>
                </div>
		    </div>

    </div>
	
			    
			 <footer>
			     <hr>
			     <p>Copyrights</p>
			 </footer>   

	    
      
{% endblock %}


    {% block body_javascript %}

{{parent()}}
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
<script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
<script>
am5.ready(function() {

// Create root element
// https://www.amcharts.com/docs/v5/getting-started/#Root_element
var root = am5.Root.new("chartdiv");

// Create custom theme
// https://www.amcharts.com/docs/v5/concepts/themes/#Quick_custom_theme
var myTheme = am5.Theme.new(root);
myTheme.rule("Label").set("fontSize", "0.8em");

// Set themes
// https://www.amcharts.com/docs/v5/concepts/themes/
root.setThemes([
  am5themes_Animated.new(root),
  myTheme
]);

// Create wrapper container
var container = root.container.children.push(am5.Container.new(root, {
  width: am5.p100,
  height: am5.p100,
  layout: root.horizontalLayout
}));

// Create first chart
// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
var chart0 = container.children.push(am5percent.PieChart.new(root, {
  innerRadius: am5.p50,
  tooltip: am5.Tooltip.new(root, {})
}));

// Create series
// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
var series0 = chart0.series.push(am5percent.PieSeries.new(root, {
  valueField: "value",
  categoryField: "category",
  alignLabels: false
}));

series0.labels.template.setAll({
  textType: "circular",
  templateField: "dummyLabelSettings"
});

series0.ticks.template.set("forceHidden", true);

var sliceTemplate0 = series0.slices.template;
sliceTemplate0.setAll({
  draggable: true,
  templateField: "settings",
  cornerRadius: 5
});

// Separator line
container.children.push(am5.Line.new(root, {
  layer: 1,
  height: am5.percent(60),
  y: am5.p50,
  centerY: am5.p50,
  strokeDasharray: [4, 4],
  stroke: root.interfaceColors.get("alternativeBackground"),
  strokeOpacity: 0.5
}));

// Label
container.children.push(am5.Label.new(root, {
  layer: 1,
  text: "Drag slices over the line",
  y: am5.p50,
  textAlign: "center",
  rotation: -90,
  isMeasured: false
}));

// Create second chart
// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/
var chart1 = container.children.push(am5percent.PieChart.new(root, {
  innerRadius: am5.p50,
  tooltip: am5.Tooltip.new(root, {})
}));

// Create series
// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series
var series1 = chart1.series.push(am5percent.PieSeries.new(root, {
  valueField: "value",
  categoryField: "category",
  alignLabels: false
}));

series1.labels.template.setAll({
  textType: "circular",
  radius: 20,
  templateField: "dummyLabelSettings"
});

series1.ticks.template.set("forceHidden", true);

var sliceTemplate1 = series1.slices.template;
sliceTemplate1.setAll({
  draggable: true,
  templateField: "settings",
  cornerRadius: 5
});

var previousDownSlice;

// change layers when down
sliceTemplate0.events.on("pointerdown", function (e) {
  if (previousDownSlice) {
    //  previousDownSlice.set("layer", 0);
  }
  e.target.set("layer", 1);
  previousDownSlice = e.target;
});

sliceTemplate1.events.on("pointerdown", function (e) {
  if (previousDownSlice) {
    // previousDownSlice.set("layer", 0);
  }
  e.target.set("layer", 1);
  previousDownSlice = e.target;
});

// when released, do all the magic
sliceTemplate0.events.on("pointerup", function (e) {
  series0.hideTooltip();
  series1.hideTooltip();

  var slice = e.target;
  if (slice.x() > container.width() / 4) {
    var index = series0.slices.indexOf(slice);
    slice.dataItem.hide();

    var series1DataItem = series1.dataItems[index];
    series1DataItem.show();
    series1DataItem.get("slice").setAll({ x: 0, y: 0 });

    handleDummy(series0);
    handleDummy(series1);
  } else {
    slice.animate({
      key: "x",
      to: 0,
      duration: 500,
      easing: am5.ease.out(am5.ease.cubic)
    });
    slice.animate({
      key: "y",
      to: 0,
      duration: 500,
      easing: am5.ease.out(am5.ease.cubic)
    });
  }
});

sliceTemplate1.events.on("pointerup", function (e) {
  var slice = e.target;

  series0.hideTooltip();
  series1.hideTooltip();

  if (slice.x() < container.width() / 4) {
    var index = series1.slices.indexOf(slice);
    slice.dataItem.hide();

    var series0DataItem = series0.dataItems[index];
    series0DataItem.show();
    series0DataItem.get("slice").setAll({ x: 0, y: 0 });

    handleDummy(series0);
    handleDummy(series1);
  } else {
    slice.animate({
      key: "x",
      to: 0,
      duration: 500,
      easing: am5.ease.out(am5.ease.cubic)
    });
    slice.animate({
      key: "y",
      to: 0,
      duration: 500,
      easing: am5.ease.out(am5.ease.cubic)
    });
  }
});

// data
var data = [
  {
    category: "Dummy",
    value: 1000,
    settings: {
      fill: am5.color(0xdadada),
      stroke: am5.color(0xdadada),
      fillOpacity: 0.3,
      strokeDasharray: [4, 4],
      tooltipText: null,
      draggable: false
    },
    dummyLabelSettings: {
      forceHidden: true
    }
  },
  {
    category: "Lithuania",
    value: 501.9
  },
  {
    category: "Estonia",
    value: 301.9
  },
  {
    category: "Ireland",
    value: 201.1
  },
  {
    category: "Germany",
    value: 165.8
  },
  {
    category: "Australia",
    value: 139.9
  },
  {
    category: "Austria",
    value: 128.3
  }
];

// show/hide dummy slice depending if there are other visible slices
function handleDummy(series) {
  // count visible data items
  var visibleCount = 0;
  am5.array.each(series.dataItems, function (dataItem) {
    if (!dataItem.isHidden()) {
      visibleCount++;
    }
  });
  // if all hidden, show dummy
  if (visibleCount == 0) {
    series.dataItems[0].show();
  } else {
    series.dataItems[0].hide();
  }
}
// set data
series0.data.setAll(data);
series1.data.setAll(data);

// hide all except dummy
am5.array.each(series1.dataItems, function (dataItem) {
  if (dataItem.get("category") != "Dummy") {
    dataItem.hide(0);
  }
});

// hide dummy
series0.dataItems[0].hide(0);

// reveal container
container.appear(1000, 100);

}); // end am5.ready()


// 2eme chart

am5.ready(function() {

// Create root element
// https://www.amcharts.com/docs/v5/getting-started/#Root_element
var root2 = am5.Root.new("chartdiv2");


// Set themes
// https://www.amcharts.com/docs/v5/concepts/themes/
root2.setThemes([
  am5themes_Animated.new(root2)
]);


// Create chart
// https://www.amcharts.com/docs/v5/charts/xy-chart/
var chart2 = root2.container.children.push(am5xy.XYChart.new(root2, {
  panX: true,
  panY: true,
  wheelX: "panX",
  wheelY: "zoomX"
}));

// Add cursor
// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/
var cursor = chart2.set("cursor", am5xy.XYCursor.new(root2, {}));
cursor.lineY.set("visible", false);


// Create axes
// https://www.amcharts.com/docs/v5/charts/xy-chart2/axes/
var xRenderer = am5xy.AxisRendererX.new(root2, { minGridDistance: 30 });
xRenderer.labels.template.setAll({
  rotation: -90,
  centerY: am5.p50,
  centerX: am5.p100,
  paddingRight: 15
});

var xAxis = chart2.xAxes.push(am5xy.CategoryAxis.new(root2, {
  maxDeviation: 0.3,
  categoryField: "country",
  renderer: xRenderer,
  tooltip: am5.Tooltip.new(root2, {})
}));

var yAxis = chart2.yAxes.push(am5xy.ValueAxis.new(root2, {
  maxDeviation: 0.3,
  renderer: am5xy.AxisRendererY.new(root2, {})
}));


// Create series
// https://www.amcharts.com/docs/v5/charts/xy-chart2/series/
var series = chart2.series.push(am5xy.ColumnSeries.new(root2, {
  name: "Series 1",
  xAxis: xAxis,
  yAxis: yAxis,
  valueYField: "value",
  sequencedInterpolation: true,
  categoryXField: "country",
  tooltip: am5.Tooltip.new(root2, {
    labelText:"{valueY}"
  })
}));

series.columns.template.setAll({ cornerRadiusTL: 5, cornerRadiusTR: 5 });
series.columns.template.adapters.add("fill", (fill, target) => {
  return chart2.get("colors").getIndex(series.columns.indexOf(target));
});

series.columns.template.adapters.add("stroke", (stroke, target) => {
  return chart2.get("colors").getIndex(series.columns.indexOf(target));
});


// Set data
var data = [{
  country: "USA",
  value: 2025
}, {
  country: "China",
  value: 1882
}, {
  country: "Japan",
  value: 1809
}, {
  country: "Germany",
  value: 1322
}, {
  country: "UK",
  value: 1122
}, {
  country: "France",
  value: 1114
}, {
  country: "India",
  value: 984
}, {
  country: "Spain",
  value: 711
}, {
  country: "Netherlands",
  value: 665
}, {
  country: "Russia",
  value: 580
}, {
  country: "South Korea",
  value: 443
}, {
  country: "Canada",
  value: 441
}];

xAxis.data.setAll(data);
series.data.setAll(data);


// Make stuff animate on load
// https://www.amcharts.com/docs/v5/concepts/animations/
series.appear(1000);
chart2.appear(1000, 100);

}); // end am5.ready()
</script>


    {% endblock body_javascript %}


